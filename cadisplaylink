
@property (nonatomic, strong) CADisplayLink      *displayLink;        //CADisplayLink用于更新画面

 //CADisplayLink类似NSTimer，在指定时间内对指定方法进调用，但是相对NSTimer而言更稳定，不会因为处理其他事件导致延误执行方法，默认情况下每1/60s调用一次指定方法
        //设置CADisplayLink的RunLoop模式为NSRunLoopCommonModes，指定调用方法为startAnimation:，并停止循环调用
        __weak __typeof(self) wself = self;
        _displayLink = [CADisplayLink displayLinkWithExecuteBlock:^(CADisplayLink *displayLink) {
            __strong __typeof(self) sself = wself;
            [sself startAnimation:displayLink];
        }];
        [_displayLink addToRunLoop:[NSRunLoop currentRunLoop] forMode:NSRunLoopCommonModes];
        _displayLink.paused = YES;
        
        
        //避免WebPImageView控件在UICollectionView或UITableView中复用时队列任务错乱，先取消当前队列正在执行的任务以及循环调用方法
    _displayLink.paused = YES;
    
    
    _displayLink.paused = NO;
    
    //CADisplayLink指定回调的方法
- (void)startAnimation:(CADisplayLink *)link {
    //判断是否所有帧都解码完毕
    if([_webPImage isAllFrameDecoded]) {
        //调用setNeedsDisplay方法更新画面
        [self.layer setNeedsDisplay];
    }
}


//
//  CADisplayLink+Tool.h
//  Douyin
//
//  Created by  on 2018/9/27.
//  Copyright © 2018年. All rights reserved.
//

#import <UIKit/UIKit.h>

typedef void(^ExecuteMethodBlock) (CADisplayLink *displayLink);

@interface CADisplayLink (Tool)

@property (nonatomic,copy)ExecuteMethodBlock executeBlock;

+ (CADisplayLink *)displayLinkWithExecuteBlock:(ExecuteMethodBlock)block;

@end

//
//  CADisplayLink+Tool.m
//  Douyin
//
//  Created by  on 2018/9/27.
//  Copyright © 2018年 i. All rights reserved.
//

#import "CADisplayLink+Tool.h"
#import "objc/runtime.h"

@implementation CADisplayLink (Tool)

- (void)setExecuteBlock:(ExecuteMethodBlock)executeBlock{
    
    objc_setAssociatedObject(self, @selector(executeBlock), [executeBlock copy], OBJC_ASSOCIATION_COPY_NONATOMIC);
}

- (ExecuteMethodBlock)executeBlock{
    
    return objc_getAssociatedObject(self, @selector(executeBlock));
}

+ (CADisplayLink *)displayLinkWithExecuteBlock:(ExecuteMethodBlock)block{
    
    CADisplayLink *displayLink = [CADisplayLink displayLinkWithTarget:self selector:@selector(executeDisplayLink:)];
    displayLink.executeBlock = [block copy];
    return displayLink;
}

+ (void)executeDisplayLink:(CADisplayLink *)displayLink{
    
    if (displayLink.executeBlock) {
        displayLink.executeBlock(displayLink);
    }
}


@end


