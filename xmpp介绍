
https://www.cnblogs.com/zyb428/p/4822734.html

一、简要解析XMPP核心部分　　

XMPP框架分为两个部分

　　　　1.核心部分

　　　　2.扩展部分 

扩展部分主要讲好友列表（roster）、自动重连（automatic reconnect）、还有一些其他的实现。

核心部分包括以下部分：

XMPPStream
XMPPParser
XMPPJID
XMPPElement
XMPPIQ
XMPPMessage
XMPPPresence
XMPPModule
XMPPLogging
XMPPInternal
1.XMPPStream

XMPPStream类相当于输入输出流，用于连接服务器并发送消息。

XMPPStream添加和移除代理写了方法

1 - (void)addDelegate:(id)delegate delegateQueue:(dispatch_queue_t)delegateQueue;
2 - (void)removeDelegate:(id)delegate delegateQueue:(dispatch_queue_t)delegateQueue;
3 - (void)removeDelegate:(id)delegate;
 

XMPP底层就是socket，所以XMPPStream实现了socket协议<GCDAsyncSocketDelegate>

初始化方法

复制代码
- (id)init
{
    if ((self = [super init]))
    {
        // Common initialization
        [self commonInit];
        
        // Initialize socket
        asyncSocket = [[GCDAsyncSocket alloc] initWithDelegate:self delegateQueue:xmppQueue];
    }
    return self;
}
复制代码
XMPPStream包含的一些属性

复制代码
/** Jabber ID 用于表示用户身份的地址 */
@property (readwrite, copy) XMPPJID *myJID;

/** 要连接的服务器的域名 格式为talk.google.com  */
@property (readwrite, copy) NSString *hostName;
/** 要连接的服务器的端口号 默认为5222*/
@property (readwrite, assign) UInt16 hostPort;
复制代码
 

2.XMPPParser

XMPPParser，是XMPPStream的解析器，解析传递的信息

 

3.XMPPJID

在XMPP协议中表示一个地址，由以下三个部分组成

　　node/username：表示一个向服务器或网关和使用网络服务的实体（节点、用户名，用户的基本标识）

　　domain：表示网络中的网关或者服务器（例如一个JID，username@domain/resource，domian即后面的域名）

　　resource：表示一个特定的回话（或者某个设备），连接（或地址），或者一个附属于某个节点ID实体相关的实体对象（或者多人聊天室中的参与者），可用于区分用户的设备等

还有定义的其他属性，

　　Bare：就是node+domain，username@domain，即JID除去resource

　　Full：一个完整的JID，包含username，domain，resource，比Bare多了resource

 

XMPPJID源码的一个枚举，看数字和，很好理解

复制代码
enum XMPPJIDCompareOptions
{
    XMPPJIDCompareUser     = 1, // 001
    XMPPJIDCompareDomain   = 2, // 010
    XMPPJIDCompareResource = 4, // 100
    
    XMPPJIDCompareBare     = 3, // 011
    XMPPJIDCompareFull     = 7, // 111
};
复制代码
XMPPJID使用了解档，归档，遵守了<NSCoding, NSCopying>协议

 

4.XMPPElement

XMPPElement是3个基本元素（IQ,Message,Presence）的基类

继承自NSXMLElement

配合分类NSXMLElement+XMPP使用可以让代码更简洁和提高可读性

 

5.XMPPIQ

请求

主要属性是type（Message和Presence一样，表示请求或者消息的类型）

复制代码
<iq Type="result"
from="lightman@google.com/contact" 
to="google.com"
id = '123456'>
<query xmins="jabber:iq:roster"/>
<iq/>

复制代码
type属性：说明了该iq类型为get，像服务端请求信息

from属性：小心来源，=JID

to属性：消息目标，=服务器域名

id属性，可选，标记该请求ID，当服务器处理完毕请求get类型的iq后，响应的result类型iq和ID与请求iq的ID相同

 

6.Message

<message />节定义了消息语义，<message />节可被看作“推”机制，与Email系统中发生的通信类似。所有消息节应该拥有‘to’属性，指定有意的消息接收者

message用于“发送后即忘”的传输（发送后不验证消息是否接收成功），这样的传输主要应用与人类可读的文本、警告、通知等信息。

 

<message to="lightman@google.com/contact" 
    type="chat">
    <body>
        hello
    < body/>
<meesage/>
 

 

7.Presence

<presence from="">
    <show>显示的内容<show/>
    <status>显示的状态<status/>
<presence/>
presence的状态

available上线

away离开

do not disturb忙碌

unavailable 下线

 
