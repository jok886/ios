LFLiveKit is a opensource RTMP streaming SDK for iOS.

Support Beauty Face With GPUImage

Support H264+AAC Hardware Encoding

LFLiveSession

LFLiveVideoConfiguration

    /***  ?默认分辨率368 ＊ 640  音频：44.1 iphone6以上48  双声道  方向竖屏 ***/
 
视频配置，配置相关视频的基本信息（视频质量、码率、帧数、分辨率）和应用配置如最大、最小帧率等。       
LFLiveVideoConfiguration *videoConfiguration = [LFLiveVideoConfiguration new];
        videoConfiguration.videoSize = CGSizeMake(360, 640);
        
videoConfiguration.videoBitRate = 800*1024;
        
videoConfiguration.videoMaxBitRate = 1000*1024;
        
videoConfiguration.videoMinBitRate = 500*1024;
        
videoConfiguration.videoFrameRate = 24;
        
videoConfiguration.videoMaxKeyframeInterval = 48;
videoConfiguration.landscape = NO;
        
videoConfiguration.sessionPreset = LFCaptureSessionPreset720x1280;

/// 默认音频质量 audio sample rate: 44MHz(默认44.1Hz iphoneg6以上48Hz), audio bitrate: 64Kbps
   /**  ??自己定制单声道  */
        /*
 
音配配置，配置相关音频信息（音频质量、码率、采样率、声道数）        
LFLiveAudioConfiguration *audioConfiguration = [LFLiveAudioConfiguration new];
         audioConfiguration.numberOfChannels = 1;
         
audioConfiguration.audioBitrate = LFLiveAudioBitRate_64Kbps;
         audioConfiguration.audioSampleRate = LFLiveAudioSampleRate_44100Hz;
         
_session = [[LFLiveSession alloc] initWithAudioConfiguration:audioConfiguration videoConfiguration:[LFLiveVideoConfiguration defaultConfiguration]];
  


   _session.delegate = self;
        
_session.showDebugInfo = NO;
        
_session.preView = _AllBackGroudView;
        
        
UIImageView *imageView = [[UIImageView alloc] init];
       
 imageView.alpha = 0.8;
        
imageView.frame = CGRectMake(100, 100, 29, 29);
        
imageView.image = [UIImage imageNamed:@"ios-29x29"];
        
_session.warterMarkView = imageView;




      
self.session.beautyFace = !self.session.beautyFace;

/**
 *  切换摄像头
 */

- (void)clickConvert:(UIButton *)sender{
    
AVCaptureDevicePosition devicePositon = self.session.captureDevicePosition;
  
  self.session.captureDevicePosition = (devicePositon == AVCaptureDevicePositionBack) ? AVCaptureDevicePositionFront : AVCaptureDevicePositionBack;


}



[self.session stopLive];
            
self.session=nil;




SDCycleScrollView 无限循环自动图片轮播器(一步设置即可使用)

//_url = [NSURL URLWithString:@"rtmp://live.yimizb.com/live/iphone?auth_key=1469700310-0-0-44fca2e32869b27859c3892bd2b14183"];
    
self.player = [[IJKFFMoviePlayerController alloc] initWithContentURL:_url withOptions:options];

ijkplayer是基于FFmpeg的跨平台播放器，这个开源项目已经被多个 App 使用，其中映客、美拍和斗鱼使用了 ijkplayer（5700+??） 

   //_url = [NSURL URLWithString:@"rtmp://live.yimizb.com/live/iphone?auth_key=1469700310-0-0-44fca2e32869b27859c3892bd2b14183"];
    self.player = [[IJKFFMoviePlayerController alloc] initWithContentURL:_url withOptions:options];
    self.player.view.autoresizingMask = UIViewAutoresizingFlexibleWidth|UIViewAutoresizingFlexibleHeight;
    self.player.scalingMode = IJKMPMovieScalingModeAspectFill;
    self.player.shouldAutoplay = YES;
    self.view.autoresizesSubviews = YES;
    [self.view addSubview:self.player.view];
    [self.player play];
	
请求加密
  [ProgressHUD show:nil];
    NSString *postUrl = [NSString stringWithFormat:@"%@api/action/postLogin",ALLURL];
    NSString *crypt_string = [DES3Util AES128Encrypt:[NSString stringWithFormat:@"?phone=%@&password=%@",_phoneTF.text,_passTF.text]];
    [HYBNetworking postWithUrl:postUrl refreshCache:YES params:@{@"crypt_string":crypt_string} success:^(id response) {

	
	 

//加密参数
-(NSMutableDictionary *) encryptParams:(NSDictionary *)params{
    NSMutableDictionary *parameters = [NSMutableDictionary dictionary];
    
    if(params==nil)return parameters;
    
    if([params objectForKey:@"action"]){//如果存在action 添加到外面
        [parameters setValue:params[@"action"] forKey:@"action"];
    }
    
   // if([params objectForKey:@"os"]){//如果存在action 添加到外面
   //     [parameters setValue:params[@"os"] forKey:@"os"];
   // }
    
    
    
    NSString *dataStr=@"";
   // for (NSString *key in params) {
        // NSLog(@"key: %@ value: %@", key, dict[key]);
       // dataStr = [dataStr stringByAppendingFormat:@"&%@=%@",key,params[key]];
  //  }
    
    
    
   // NSDictionary *params = @{@"user_voice_template_id":msgtemplate_id};
    
    NSMutableDictionary *pars =[[NSMutableDictionary alloc]initWithDictionary:params];
    [pars removeObjectForKey:@"action"];
    
    
    NSError *error;
    NSData *jsonData = [NSJSONSerialization dataWithJSONObject:pars  options:0 error:&error];
    NSAssert(!error,@"%@",[NSString stringWithFormat:@"Error: %@", error.description]);
    NSString *datajson = [[NSString alloc] initWithData:jsonData encoding:NSUTF8StringEncoding];
    
    dataStr =datajson;
    
    
    
    //去掉最前面的“&”
 //   dataStr = [dataStr substringFromIndex:1];
 //   NSLog(@"data:%@",dataStr);
    
    
    //arc4random
    NSInteger randomInteger =arc4random()%5+1;
    NSString *base64StringDataStr = [[dataStr base64String] getSSString:[dataStr base64String] andKey:randomInteger];
    
    
    // 插入到加密后的data第二位 abc   a1bc
    NSString *strindex = [NSString stringWithFormat:@"%@%ld%@",[base64StringDataStr substringToIndex:1],(long)randomInteger,[base64StringDataStr substringFromIndex:1]];
    
    
    [parameters setValue:strindex forKey:@"data"];
    
    
    
   // [parameters setValue:base64StringDataStr forKey:@"data"];
   // [parameters setValue:[NSString stringWithFormat:@"%ld",(long)randomInteger] forKey:@"op"];
    
    
    
    return parameters;
}

解压缩
// id decodeJson = [LFCGzipUtillity MyEncoding:response];	 
	
 _segBgView = [UIView new];
    //segBgView.backgroundColor = DEFAULTCOLOR_GREED;
    _segBgView.frame = CGRectMake(0, CGRectGetMaxY(_heardView.frame), 3*SCREENWIDTH/4, 50);
    [self.view addSubview:_segBgView];
    
    CGFloat scrollViewH = SCREENHEIGHT - CGRectGetMaxY(_segBgView.frame);
    
	
	 
	 
    self.segmentedControl = [[HMSegmentedControl alloc] initWithFrame:CGRectMake(0, 0, SCREENWIDTH, 60)];
    self.segmentedControl.sectionTitles = @[@"简介",@"聊天",@"排行"];
    self.segmentedControl.backgroundColor = DEFAULTCOLOR_LINGTGRAY;
    self.segmentedControl.titleTextAttributes = @{NSForegroundColorAttributeName : [UIColor darkGrayColor]};
    self.segmentedControl.selectedTitleTextAttributes = @{NSForegroundColorAttributeName : DEFAULTCOLOR};
    self.segmentedControl.selectionIndicatorColor = DEFAULTCOLOR;
    self.segmentedControl.selectionStyle = HMSegmentedControlSelectionStyleTextWidthStripe;
    self.segmentedControl.selectionIndicatorHeight = 2.0f;
    self.segmentedControl.selectionIndicatorLocation = HMSegmentedControlSelectionIndicatorLocationDown;
    __weak typeof(self) weakSelf = self;
    [self.segmentedControl setIndexChangeBlock:^(NSInteger index) {
        [weakSelf.scrollView scrollRectToVisible:CGRectMake(SCREENWIDTH * index, 0, SCREENWIDTH, scrollViewH) animated:YES];
        
    }];
    if (_segmentedControl.superview==nil) {
        [_segBgView addSubview:_segmentedControl];
    }
	
	// self.navigationItem.titleView = self.segmentedControl;
	 
  _segmentedControl.sd_layout.heightIs(50).leftSpaceToView(_segBgView,0).topSpaceToView(_segBgView,0).rightSpaceToView(_segBgView,0);
    self.scrollView = [UIScrollView new];
    self.scrollView.backgroundColor = [UIColor clearColor];
    self.scrollView.pagingEnabled = YES;
    self.scrollView.bounces = NO;
    self.scrollView.showsHorizontalScrollIndicator = NO;
    self.scrollView.showsVerticalScrollIndicator = NO;
    self.scrollView.contentSize = CGSizeMake(SCREENWIDTH* 3, scrollViewH);
    self.scrollView.delegate = self;
    [self.view addSubview:self.scrollView];
    self.scrollView.sd_layout.topSpaceToView(_segBgView,0).leftSpaceToView(self.view,0).bottomSpaceToView(self.view,0).rightSpaceToView(self.view,0);
#pragma mark scrollView添加手势
    UITapGestureRecognizer *tapGesture = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(hideUIViewAction)];
    [self.scrollView addGestureRecognizer:tapGesture];
	
	
	
	#pragma mark 设置礼物的UI
    UICollectionViewFlowLayout *flowLayout=[[UICollectionViewFlowLayout alloc] init];
    [flowLayout setScrollDirection: UICollectionViewScrollDirectionHorizontal];
    flowLayout.minimumInteritemSpacing = 0.01;
    flowLayout.itemSize = CGSizeMake(80, 100);
    flowLayout.sectionInset = UIEdgeInsetsMake(5, 5, 0, 0);
    _giftCollectionView = [[UICollectionView alloc] initWithFrame:CGRectMake(SCREENWIDTH,  scrollViewH - 220, SCREENWIDTH, 120) collectionViewLayout:flowLayout];
    _giftCollectionView.backgroundColor = [UIColor colorWithRed:12/255.0 green:13/255.0 blue:14/255.0 alpha:0.7];
    _giftCollectionView.delegate = self;
    _giftCollectionView.dataSource = self;
    _giftCollectionView.showsHorizontalScrollIndicator = NO;
    [_giftCollectionView registerClass:[MagorGiftCollectionViewCell class] forCellWithReuseIdentifier:@"MagorGiftCollectionViewCellID"];
    [_scrollView addSubview:_giftCollectionView];
    _giftCollectionView.hidden = YES;
	
//广告图	
#import <SDCycleScrollView.h>   	
@property (weak, nonatomic) IBOutlet SDCycleScrollView *bannerView;

@implementation XMGHomeHeaderView

- (void)setAds:(NSArray *)ads
{
    _ads = ads;
    
    NSMutableArray *urls = [NSMutableArray array];
    
    for (XMGHomeADItem *item in ads) {
        [urls addObject:item.image];
    }
    
    _bannerView.imageURLStringsGroup = urls;
}

	

